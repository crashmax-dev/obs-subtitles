{"mappings":"CAAC,WAKC,MAAMA,EAAYC,OAAOD,UAAY,SAAUE,EAAQ,IAErD,IAAIC,EAAM,IAAIC,eACVC,GAAW,EACXC,EAAUJ,EAAMI,SAAW,KAC3BC,EAAUL,EAAMK,SAAW,aAC3BC,EAAON,EAAMM,MAAQ,aAGzB,SAASC,IACHJ,IACJF,EAAIM,OAASN,EAAIM,QACjBC,KAIF,SAASA,IACPL,GAAW,EACXM,aAAaR,EAAIS,OAyBnB,OArBAT,EAAIU,OAAS,WACX,IAAIR,EAAJ,CAEA,IAAIS,EADJJ,IAGA,IAAMI,EAASC,KAAKC,MAAMb,EAAIc,UAC9B,MAAOC,GAAKV,EAAKL,GAEbW,EAAQP,EAAQO,GACfN,EAAKL,GACVW,EAAS,OAIXX,EAAIgB,QAAUhB,EAAIiB,UAAYjB,EAAIkB,QAAU,WACtChB,IACJK,IACAF,EAAKL,KAIA,SAAUmB,GACf,IAAIC,EAAMD,EAAMC,KAAO,+BACnBC,EAAUF,EAAME,SAAW,GAC3BC,EAASH,EAAMG,QAAU,MACzBC,EAAUJ,EAAMI,SAAW,KAC3BC,EAASL,EAAMK,QAAUL,EAAMM,MAAQ,GACvCA,EAAO,GAGX,IAAK,IAAIC,KAASF,EAChBC,EAAKE,KAAK,CAACD,EAAOF,EAAOE,IAAQE,KAAK,MAYxC,IAAK,IAAIC,KATT3B,GAAW,EACXF,EAAIG,QAAUA,EACdH,EAAI8B,KACFR,EACAF,GAAOK,EAAKM,OAAU,IAAMN,EAAKG,KAAK,KAAQ,KAC9C,GAIiBP,EACjBrB,EAAIgC,iBAAiBH,EAAQR,EAAQQ,IAavC,OAVA7B,EAAIiC,KAAKV,EAAUX,KAAKsB,UAAUX,GAAW,MAG7CvB,EAAIS,OAASD,aAAaR,EAAIS,OAC9BT,EAAIS,MAAQ0B,YAAW,WACjBjC,IACJI,IACAD,EAAKL,MACJG,GAEI,CACLH,IAAKA,EACLM,MAAOA,KASGR,OAAOsC,UAAY,SAAUjB,GAC9BA,EAAMkB,OAAnB,IACIC,EAASnB,EAAMmB,QAAU,OACzBC,EAAUpB,EAAMoB,SAAW,IAC3BpC,EAAUgB,EAAMhB,SAAW,KAC3BqC,EAAYrB,EAAMqB,WAAa,IAC/BC,EAAUtB,EAAMsB,SAAW,aAC3BC,EAAQvB,EAAMwB,WAAa,IAC3BA,EAAY,GACZC,GAAO,EACPxB,EAAM,GACNyB,EAAS,MAAQC,KAAKC,SAAW,IAAIC,MAAM,KAAK,GAAK,cAGrDC,EAAUpD,EAAU,CACtBM,QAASA,EACTC,QAAS8C,EACT7C,KAAM,WAAc6C,OAItB,SAASA,EAAK3B,GACRqB,IACArB,IACFiB,EAAYjB,EAAQ4B,EAAEA,EACtBV,EAAQlB,IAGVH,EAAM,CACJ,WAAYyB,EACZ,iBAAkBP,EAClB,IAAKC,EACL,MAAOC,GACPZ,KAAK,IAEPO,YAAW,WACTQ,EAAYD,EACZO,EAAQ,CAAE7B,IAAKA,MACduB,IAYL,OAHAO,IAGO,CACLE,YATF,WACER,GAAO,KA1IZ","sources":["src/request.js"],"sourcesContent":["(function () {\n\n  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n  // Request URL\n  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n  const requester = window.requester = function (setup = {}) {\n\n    let xhr = new XMLHttpRequest()\n      , finished = false\n      , timeout = setup.timeout || 15000\n      , success = setup.success || function () { }\n      , fail = setup.fail || function () { };\n\n    // Cancel a Pending Request\n    function abort() {\n      if (finished) return;\n      xhr.abort && xhr.abort();\n      finish();\n    }\n\n    // Mark Request as Completed\n    function finish() {\n      finished = true;\n      clearTimeout(xhr.timer);\n    }\n\n    // When a Request has a Payload\n    xhr.onload = function () {\n      if (finished) return;\n      finish();\n      var result;\n\n      try { result = JSON.parse(xhr.response) }\n      catch (e) { fail(xhr) }\n\n      if (result) success(result);\n      else fail(xhr);\n      result = null;\n    };\n\n    // When a Request has Failed\n    xhr.onabort = xhr.ontimeout = xhr.onerror = function () {\n      if (finished) return;\n      finish();\n      fail(xhr);\n    };\n\n    // Return Requester Object\n    return function (setup) {\n      let url = setup.url || 'https://ps.pubnub.com/time/0'\n        , headers = setup.headers || {}\n        , method = setup.method || 'GET'\n        , payload = setup.payload || null\n        , params = setup.params || setup.data || {}\n        , data = [];\n\n      // URL Parameters\n      for (var param in params)\n        data.push([param, params[param]].join('='));\n\n      // Start Request\n      finished = false;\n      xhr.timeout = timeout;\n      xhr.open(\n        method,\n        url + (data.length ? ('?' + data.join('&')) : ''),\n        true\n      );\n\n      // Headers\n      for (var header in headers)\n        xhr.setRequestHeader(header, headers[header]);\n\n      // Send Request\n      xhr.send(payload ? JSON.stringify(payload) : null);\n\n      // Timeout and Aboart for Slow Requests\n      xhr.timer && clearTimeout(xhr.timer);\n      xhr.timer = setTimeout(function () {\n        if (finished) return;\n        abort();\n        fail(xhr);\n      }, timeout);\n\n      return {\n        xhr: xhr,\n        abort: abort\n      }\n    };\n  };\n\n\n  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n  // Subscribe\n  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\n  var subscribe = window.subscribe = function (setup) {\n    var pubkey = setup.pubkey || 'demo'\n      , subkey = setup.subkey || 'demo'\n      , channel = setup.channel || 'a'\n      , timeout = setup.timeout || 290000\n      , timetoken = setup.timetoken || '0'\n      , message = setup.message || function () { }\n      , windy = setup.windowing || 1000\n      , windowing = 10\n      , stop = false\n      , url = ''\n      , origin = 'ps' + (Math.random() + '').split('.')[1] + '.pubnub.com';\n\n    // Requester Object\n    var request = requester({\n      timeout: timeout,\n      success: next,\n      fail: function () { next() }\n    });\n\n    // Subscribe Loop\n    function next(payload) {\n      if (stop) return;\n      if (payload) {\n        timetoken = payload.t.t;\n        message(payload);\n      }\n\n      url = [\n        'https://', origin,\n        '/v2/subscribe/', subkey,\n        '/', channel,\n        '/0/', timetoken\n      ].join('');\n\n      setTimeout(function () {\n        windowing = windy;\n        request({ url: url });\n      }, windowing);\n    }\n\n    // Cancel Subscription\n    function unsubscribe() {\n      stop = true;\n    }\n\n    // Start Subscribe Loop\n    next();\n\n    // Allow Cancelling Subscriptions\n    return {\n      unsubscribe: unsubscribe\n    };\n  };\n\n})();\n"],"names":["requester","window","setup1","xhr","XMLHttpRequest","finished","timeout","success","fail","abort","finish","clearTimeout","timer","onload","result","JSON","parse","response","e","onabort","ontimeout","onerror","setup","url","headers","method","payload","params","data","param","push","join","header","open","length","setRequestHeader","send","stringify","setTimeout","subscribe","pubkey","subkey","channel","timetoken","message","windy","windowing","stop","origin","Math","random","split","request","next","t","unsubscribe"],"version":3,"file":"index.69f49e8d.js.map"}